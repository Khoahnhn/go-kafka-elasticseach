services:
  mysql:
    image: mysql:8.0
    container_name: my_mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql_mode="" --default-authentication-plugin=mysql_native_password
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_network

  elasticsearch:
    image: elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    env_file:
      - .env
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
#      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - TZ=Asia/Bangkok
    ports:
      - "${ES_PORT_9200}:9200"
      - "${ES_PORT_9300}:9300"
    networks:
      - elastic_network
    cap_add:
      - SYS_TIME
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 40s

  kibana:
    image: kibana:${ELASTIC_VERSION}
    container_name: kibana
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_DOCKER}
      - xpack.security.enrollment.enabled=false
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD}
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5601/api/status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: logstash:${ELASTIC_VERSION}
    container_name: logstash
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_DOCKER}
    ports:
      - "${LOGSTASH_PORT_5044}:5044"
      - "${LOGSTASH_PORT_9600}:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic_network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.0
    container_name: filebeat
    user: root
    depends_on:
      - logstash
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/log:/var/log:ro
    command: filebeat -e

#  backend:
#    build: .
#    container_name: my_backend
#    restart: always
#    depends_on:
#      - mysql
#      - elasticsearch
#    env_file:
#      - .env
#    ports:
#      - "${APP_PORT}:8080"
#    networks:
#      - my_network
#      - elastic_network

volumes:
  mysql_data:
  es_data:
    driver: local

networks:
  my_network:
    driver: bridge
  elastic_network:
    driver: bridge