##!/bin/bash
#
## T√¨m ƒë∆∞·ªùng d·∫´n c·ªßa migrate
#if ! command -v migrate &> /dev/null; then
#    echo "‚ùå ERROR: 'migrate' kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y! H√£y ki·ªÉm tra l·∫°i GOPATH/bin."
#    exit 1
#fi
#
## C·∫•u h√¨nh database (thay ƒë·ªïi t√πy theo m√¥i tr∆∞·ªùng c·ªßa b·∫°n)
## Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env n·∫øu c√≥
#if [ -f .env ]; then
#  # shellcheck disable=SC2046
#  export $(grep -v '^#' .env | xargs)
#fi
#
## Ki·ªÉm tra n·∫øu bi·∫øn DB_HOST ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p
#if [ -z "$DB_HOST" ]; then
#  echo "ERROR: Bi·∫øn m√¥i tr∆∞·ªùng ch∆∞a ƒë∆∞·ª£c load! H√£y ki·ªÉm tra file .env"
#  exit 1
#fi
#
## T·∫°o connection string cho Golang Migrate
#DB_URL="mysql://$DB_USER:$DB_PASSWORD@tcp($DB_HOST:$DB_PORT)/$DB_NAME"
#MIGRATIONS_DIR=".db/migration/version"
#MIGRATE_BIN="$HOME/go/bin/migrate"
#
## N·∫øu ƒëang ch·∫°y tr√™n Windows (Git Bash, WSL), c·∫≠p nh·∫≠t ƒë∆∞·ªùng d·∫´n
#if [[ "$(uname -s)" =~ MINGW|MSYS|CYGWIN ]]; then
#  MIGRATE_BIN="C:/Users/Admin/go/bin/migrate.exe"
#fi
#
## Ki·ªÉm tra tham s·ªë ƒë·∫ßu v√†o
#if [ "$#" -eq 0 ]; then
#  echo "Usage: $0 {up|down|force|goto <version>|version|status}"
#  exit 1
#fi
#
## Ch·∫°y l·ªánh migration theo tham s·ªë
#case "$1" in
#  up)
#    echo "üîº Running all pending migrations..."
#    $(command -v migrate) -database "$DB_URL" -path "$MIGRATIONS_DIR" up
#    ;;
#  down)
#    echo "üîΩ Rolling back last migration..."
#    "$MIGRATE_BIN" -database "$DB_URL" -path "$MIGRATIONS_DIR" down 1
#    ;;
#  force)
#    if [ -z "$2" ]; then
#      echo "‚ö†Ô∏è  Missing version number. Usage: $0 force <version>"
#      exit 1
#    fi
#    echo "‚ö†Ô∏è  Forcing migration version to $2..."
#    "$MIGRATE_BIN" -database "$DB_URL" -path "$MIGRATIONS_DIR" force "$2"
#    ;;
#  goto)
#    if [ -z "$2" ]; then
#      echo "‚ö†Ô∏è  Missing version number. Usage: $0 goto <version>"
#      exit 1
#    fi
#    echo "‚û°Ô∏è  Migrating to version $2..."
#    "$MIGRATE_BIN" -database "$DB_URL" -path "$MIGRATIONS_DIR" goto "$2"
#    ;;
#  version)
#    echo "üìú Current migration version:"
#    "$MIGRATE_BIN" -database "$DB_URL" -path "$MIGRATIONS_DIR" version
#    ;;
#  status)
#    echo "üîç Checking migration status..."
#    "$MIGRATE_BIN" -database "$DB_URL" -path "$MIGRATIONS_DIR" version
#    ;;
#  *)
#    echo "‚ùå Invalid command. Usage: $0 {up|down|force|goto <version>|version|status}"
#    exit 1
#    ;;
#esac